name: Build Go-Proxy-BingAI Nightly
on:
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
          check-latest: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0

      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Shanghai

      - name: Delete Old Release & Tag
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: nightly
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true

      - name: Set Variables
        run: |
          echo "BODY=Released on $(date +%Y-%m-%d)" >> $GITHUB_ENV
          DATE=$(date +%Y.%m.%d)
          sed -i "s/\"version\": \".*\"/\"version\": \"$DATE-nightly\"/g" frontend/package.json
          sed -i 's|go-proxy-bingai/releases/latest/download|go-proxy-bingai/releases/download/nightly|g' .devcontainer/Dockerfile

      - name: Build Frontend
        run: |
          rm -r web/* && git checkout web/web.go
          cd frontend
          npm install
          npm run build
          cd ..

      - name: Commit nightly webFile
        run: |
          git checkout -b nightly
          git config --global user.email "zklcdc@qq.com"
          git config --global user.name "Harry-zklcdc"
          git add web/*
          git add .devcontainer/Dockerfile
          git commit -m "[Upgrade] ðŸš€ Upload nightly webFile"
          git tag -a nightly -m "Released on $(date +%Y-%m-%d)"
          git push -f origin HEAD:nightly
          git push --tags

      - name: Build binary
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-linux-amd64.tar.gz go-proxy-bingai
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-linux-arm64.tar.gz go-proxy-bingai
          GOOS=linux GOARCH=arm GOARM=7 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-linux-armv7.tar.gz go-proxy-bingai
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai.exe main.go && tar -zcvf go-proxy-bingai-windows-amd64.tar.gz go-proxy-bingai.exe
          GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai.exe main.go && tar -zcvf go-proxy-bingai-windows-arm64.tar.gz go-proxy-bingai.exe
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-darwin-amd64.tar.gz go-proxy-bingai
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-darwin-arm64.tar.gz go-proxy-bingai
          GOOS=freebsd GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-freebsd-amd64.tar.gz go-proxy-bingai
          GOOS=freebsd GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-freebsd-arm64.tar.gz go-proxy-bingai
          GOOS=freebsd GOARCH=arm GOARM=7 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go && tar -zcvf go-proxy-bingai-freebsd-armv7.tar.gz go-proxy-bingai

      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          name: nightly
          tag_name: nightly
          body: ${{ env.BODY }}
          generate_release_notes: true
          files: |
            go-proxy-bingai-linux-amd64.tar.gz
            go-proxy-bingai-linux-arm64.tar.gz
            go-proxy-bingai-linux-armv7.tar.gz
            go-proxy-bingai-windows-amd64.tar.gz
            go-proxy-bingai-windows-arm64.tar.gz
            go-proxy-bingai-darwin-amd64.tar.gz
            go-proxy-bingai-darwin-arm64.tar.gz
            go-proxy-bingai-freebsd-amd64.tar.gz
            go-proxy-bingai-freebsd-arm64.tar.gz
            go-proxy-bingai-freebsd-armv7.tar.gz

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: web
          retention-days: 3

